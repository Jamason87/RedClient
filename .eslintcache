[{"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\index.tsx":"1","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\App.tsx":"2","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\contexts\\RootContext.tsx":"3","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\auth\\AuthenticatedRoute.tsx":"4","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Login.tsx":"5","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Signup.tsx":"6","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\Navbar.tsx":"7","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\Wishlist.tsx":"8","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionTableItem.tsx":"9","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionTable.tsx":"10","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionsList.tsx":"11","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionListItem.tsx":"12","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\Collection.tsx":"13","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\Collections.tsx":"14","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Home.tsx":"15","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\search\\Search.tsx":"16","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\search\\SearchList.tsx":"17","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionsAdd.tsx":"18","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\funko\\Funko.tsx":"19","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\funko\\FunkoAddToCollection.tsx":"20"},{"size":463,"mtime":1608752672011,"results":"21","hashOfConfig":"22"},{"size":1664,"mtime":1610240539804,"results":"23","hashOfConfig":"22"},{"size":2247,"mtime":1610313280840,"results":"24","hashOfConfig":"22"},{"size":576,"mtime":1610055711791,"results":"25","hashOfConfig":"22"},{"size":4048,"mtime":1610147956886,"results":"26","hashOfConfig":"22"},{"size":5533,"mtime":1610147881575,"results":"27","hashOfConfig":"22"},{"size":4824,"mtime":1610056138074,"results":"28","hashOfConfig":"22"},{"size":1152,"mtime":1609799599924,"results":"29","hashOfConfig":"22"},{"size":1321,"mtime":1610053152864,"results":"30","hashOfConfig":"22"},{"size":1606,"mtime":1610245316919,"results":"31","hashOfConfig":"22"},{"size":4069,"mtime":1610249355000,"results":"32","hashOfConfig":"22"},{"size":506,"mtime":1610053142499,"results":"33","hashOfConfig":"22"},{"size":2308,"mtime":1610240095813,"results":"34","hashOfConfig":"22"},{"size":2103,"mtime":1610238273977,"results":"35","hashOfConfig":"22"},{"size":236,"mtime":1610055055343,"results":"36","hashOfConfig":"22"},{"size":1290,"mtime":1610243341637,"results":"37","hashOfConfig":"22"},{"size":2263,"mtime":1610243113290,"results":"38","hashOfConfig":"22"},{"size":3112,"mtime":1610226519882,"results":"39","hashOfConfig":"22"},{"size":4996,"mtime":1610247360734,"results":"40","hashOfConfig":"22"},{"size":1814,"mtime":1610249774254,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"2p6n5k",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\index.tsx",[],["88","89"],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\App.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\contexts\\RootContext.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\auth\\AuthenticatedRoute.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Login.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Signup.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\Navbar.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\Wishlist.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionTableItem.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionTable.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionsList.tsx",["90"],"import classes from \"*.module.css\";\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button, Grid, Modal } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootContext } from '../../contexts/RootContext';\r\nimport CollectionsAdd from \"./CollectionsAdd\";\r\n\r\ntype CollectionsListProps = {\r\n    page: number,\r\n    maxResults: number\r\n}\r\n\r\ntype CollectionsListState = {\r\n    totalResults: number,\r\n    results: Array<any>,\r\n    addModalOpen: boolean\r\n}\r\n\r\nexport default class CollectionsList extends Component<CollectionsListProps, CollectionsListState> {\r\n    static contextType = RootContext;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            totalResults: 0,\r\n            results: [],\r\n            addModalOpen: false\r\n        }\r\n\r\n        this.handleAddModalOpen = this.handleAddModalOpen.bind(this);\r\n        this.handleAddModalClosed = this.handleAddModalClosed.bind(this);\r\n    }\r\n\r\n    loadData() {\r\n        let axiosData = {\r\n            page: this.props.page,\r\n            maxResults: this.props.maxResults\r\n        }\r\n\r\n        Axios.post(`${this.context.serverUrl}/collection/user`, axiosData, {\r\n            headers: {\r\n                'Authorization': this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.setState({\r\n                    totalResults: res.data.data.count,\r\n                    results: res.data.data.rows\r\n                })\r\n\r\n                console.log(res.data.data.rows)\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response)\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: any) {\r\n        if (prevProps.page !== this.props.page) {\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    handleAddModalOpen() {\r\n        this.setState({\r\n            addModalOpen: true\r\n        })\r\n    }\r\n\r\n    handleAddModalClosed() {\r\n        this.setState({\r\n            addModalOpen: false\r\n        })\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Grid container justify=\"flex-end\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleAddModalOpen}>Add</Button>\r\n                </Grid>\r\n                <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Collection Name</TableCell>\r\n                        <TableCell align=\"left\">Description</TableCell>\r\n                        <TableCell align=\"right\"># of Items</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {this.state.results.map((result: any) => (\r\n                        <TableRow key={result.id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            <Link to={`/collection/${result.id}`}>{result.name}</Link>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{result.description}</TableCell>\r\n                        <TableCell align=\"right\">{0}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n\r\n\r\n\r\n                <Modal\r\n                    open={this.state.addModalOpen}\r\n                    onClose={this.handleAddModalClosed}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    style={{display:'flex',alignItems:'center',justifyContent:'center', outline: 0}}\r\n                >\r\n                    <CollectionsAdd closeModal={this.handleAddModalClosed} />\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionListItem.tsx",[],["91","92"],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\Collection.tsx",["93"],"import { Card, CardContent, Grid, Paper, Typography } from '@material-ui/core';\r\nimport Axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { RootContext } from '../../contexts/RootContext';\r\n\r\ntype CollectionProps = {\r\n    match: any\r\n}\r\n\r\ntype CollectionState = {\r\n    result: any,\r\n    collectionId: any,\r\n    styles: any\r\n}\r\n\r\nexport default class Collection extends Component<CollectionProps, CollectionState> {\r\n    static contextType = RootContext;\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            collectionId: this.props.match.params.collectionId,\r\n            result: null,\r\n            styles: {\r\n                root: {\r\n                    width: '100%'\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get(`${this.context.serverUrl}/collection/id/${this.state.collectionId}`)\r\n            .then(res => {\r\n                console.log(res.data.data);\r\n\r\n                this.setState({\r\n                    result: res.data.data\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.result !== null && <Grid container justify=\"center\" spacing={3}>\r\n                    <Grid item xs={8}>\r\n                        <Card style={this.state.styles.root}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h2\">{this.state.result.name}</Typography>\r\n                                <hr/>\r\n                                <Typography variant=\"subtitle1\">{this.state.result.description}</Typography>\r\n                                <hr/>\r\n                                {(this.state.result.funkos.length !== 0) ?\r\n                                        this.state.result.funkos.map((funko: any) => {\r\n                                            return <div>FUNKO PLACEHOLDER</div>\r\n                                        }) : <Typography variant=\"subtitle1\">You have no funkos in this collection, consider adding one to begin.</Typography>\r\n                                }\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\Collections.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Home.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\search\\Search.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\search\\SearchList.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionsAdd.tsx",["94","95","96","97"],"import { Button, Grid, makeStyles, Paper, TextField, withStyles } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport { RootContext } from '../../contexts/RootContext';\r\n\r\ntype CollectionsAddProps = {\r\n    closeModal: Function\r\n}\r\ntype CollectionsAddState = {\r\n    styles: any,\r\n    iName: string,\r\n    iDesc: string,\r\n    errors: Array<string>\r\n}\r\n\r\nexport default class CollectionsAdd extends Component<CollectionsAddProps, CollectionsAddState> {\r\n    static contextType = RootContext\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            iName: '',\r\n            iDesc: '',\r\n            styles: {\r\n                textfield: {\r\n                    width: '300px'\r\n                },\r\n                errorMsg: {\r\n                    color: 'red'\r\n                }\r\n            },\r\n            errors: []\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    onInputChange(e: any, v: string) {\r\n        switch (v) {\r\n            case \"name\":\r\n                this.setState({\r\n                    iName: e.target.value\r\n                })\r\n                break;\r\n            case \"desc\":\r\n                this.setState({\r\n                    iDesc: e.target.value\r\n                })\r\n                break;\r\n        }\r\n    }\r\n\r\n    onSubmit(e: any) {\r\n        e.preventDefault();\r\n\r\n        let success = false;\r\n        let errors = [];\r\n        //Handle adding a new collection\r\n        if (this.state.iName === '') errors.push('The name must not be empty.')\r\n        if (this.state.iDesc === '') errors.push('The description must not be empty.')\r\n\r\n        if (errors.length === 0) {\r\n            let axiosData = {\r\n                name: this.state.iName,\r\n                description: this.state.iDesc\r\n            }\r\n\r\n            Axios.post(`${this.context.serverUrl}/collection/create`, axiosData, {\r\n                headers: {\r\n                    \"Authorization\": this.context.token\r\n                }\r\n            })\r\n\r\n            this.props.closeModal()\r\n        } else {\r\n            this.setState({\r\n                errors: errors\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Paper style={{\r\n                padding: 10\r\n            }}>\r\n                {this.state.errors.length !== 0 && <div>\r\n                        {this.state.errors.map(e => {\r\n                            return <p style={this.state.styles.errorMsg}>{e}</p>\r\n                        })}\r\n                    </div>}\r\n                <form noValidate autoComplete=\"off\" onSubmit={this.onSubmit}>\r\n                    <TextField type=\"text\" style={this.state.styles.textfield} onChange={(e) => this.onInputChange(e, \"name\")} label=\"Name\" />< br />\r\n                    <TextField type=\"text\" style={this.state.styles.textfield} onChange={(e) => this.onInputChange(e, \"desc\")} label=\"Description\" /><br /><br />\r\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">Add</Button>\r\n                </form>\r\n            </Paper>\r\n        )\r\n    }\r\n}","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\funko\\Funko.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\funko\\FunkoAddToCollection.tsx",["98","99"],"import { Grid, Paper } from '@material-ui/core';\r\nimport { Collections } from '@material-ui/icons';\r\nimport Axios from 'axios';\r\nimport React, { Component } from 'react'\r\n\r\ntype FunkoAddToCollectionProps = {\r\n    closeModal: Function\r\n}\r\ntype FunkoAddToCollectionState = {\r\n    styles: any\r\n    collections: Array<any>\r\n}\r\n\r\nexport default class FunkoAddToCollection extends Component<FunkoAddToCollectionProps, FunkoAddToCollectionState> {\r\n    constructor(props: FunkoAddToCollectionProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            styles: {\r\n                root: {\r\n                    width: '600px'\r\n                }\r\n            },\r\n            collections: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //find collections that exist for this user, add them to a list and provide a drop down to choose a collection to add the funko to.\r\n        let axiosData = {\r\n            ignoreLimits: true\r\n        }\r\n        Axios.post(`${this.context.serverUrl}/collection/user`, axiosData, {\r\n            headers: {\r\n                \"Authorization\": this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                res.data.data.rows.map((r: any) => {\r\n                    this.setState({\r\n                        collections: [...this.state.collections, {\r\n                            id: r.id,\r\n                            name: r.name\r\n                        }]\r\n                    })\r\n                })\r\n            })//TODO: FINISH THE ADD TO A COLLECTION FUNKO\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid component={Paper} style={this.state.styles.root} justify=\"center\" container>\r\n                <Grid item xs={5}>\r\n                    This is a test\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}",{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":15},{"ruleId":"100","replacedBy":"108"},{"ruleId":"102","replacedBy":"109"},{"ruleId":"104","severity":1,"message":"110","line":1,"column":35,"nodeType":"106","messageId":"107","endLine":1,"endColumn":40},{"ruleId":"104","severity":1,"message":"111","line":1,"column":18,"nodeType":"106","messageId":"107","endLine":1,"endColumn":22},{"ruleId":"104","severity":1,"message":"112","line":1,"column":24,"nodeType":"106","messageId":"107","endLine":1,"endColumn":34},{"ruleId":"104","severity":1,"message":"113","line":1,"column":54,"nodeType":"106","messageId":"107","endLine":1,"endColumn":64},{"ruleId":"104","severity":1,"message":"114","line":56,"column":13,"nodeType":"106","messageId":"107","endLine":56,"endColumn":20},{"ruleId":"104","severity":1,"message":"115","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":21},{"ruleId":"116","severity":1,"message":"117","line":39,"column":49,"nodeType":"118","messageId":"119","endLine":39,"endColumn":51},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"@typescript-eslint/no-unused-vars","'classes' is defined but never used.","Identifier","unusedVar",["120"],["121"],"'Paper' is defined but never used.","'Grid' is defined but never used.","'makeStyles' is defined but never used.","'withStyles' is defined but never used.","'success' is assigned a value but never used.","'Collections' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]