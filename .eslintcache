[{"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\index.tsx":"1","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\App.tsx":"2","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\contexts\\RootContext.tsx":"3","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\auth\\AuthenticatedRoute.tsx":"4","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Login.tsx":"5","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\ProtectedTest.tsx":"6","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Signup.tsx":"7","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\UnprotectedTest.tsx":"8","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\Navbar.tsx":"9","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Wishlist.tsx":"10"},{"size":463,"mtime":1608752672011,"results":"11","hashOfConfig":"12"},{"size":1108,"mtime":1609036975742,"results":"13","hashOfConfig":"12"},{"size":1363,"mtime":1609035781967,"results":"14","hashOfConfig":"12"},{"size":610,"mtime":1608755874138,"results":"15","hashOfConfig":"12"},{"size":3495,"mtime":1609035987575,"results":"16","hashOfConfig":"12"},{"size":146,"mtime":1608755797570,"results":"17","hashOfConfig":"12"},{"size":4936,"mtime":1608756003154,"results":"18","hashOfConfig":"12"},{"size":152,"mtime":1608755806898,"results":"19","hashOfConfig":"12"},{"size":3842,"mtime":1609037007236,"results":"20","hashOfConfig":"12"},{"size":203,"mtime":1609036928733,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"2p6n5k",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\index.tsx",[],["45","46"],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\App.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\contexts\\RootContext.tsx",["47"],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\auth\\AuthenticatedRoute.tsx",["48"],"import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { RootContext } from '../contexts/RootContext';\r\n\r\n//Acts as a wrapper for the react router Route component.\r\nexport default ({ render, ...routeProps }: any) => {\r\n  const { authenticated } = useContext(RootContext);\r\n\r\n  //Checks if the user is authenticated and shows the correct page, otherwise redirects to the login page.\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={() => (authenticated === 'true' ? \r\n        render() : \r\n        <Redirect to='/login' />)\r\n      }\r\n    />\r\n  );\r\n};","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Login.tsx",["49","50"],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\ProtectedTest.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Signup.tsx",["51","52"],"import { Grid, Paper, TextField, Button, Box } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { RootContext } from \"../contexts/RootContext\";\r\n\r\nfunction Signup() {\r\n    const [iUsername, setIUsername] = useState('');\r\n    const [iEmail, setIEmail] = useState('');\r\n    const [iPassword, setIPassword] = useState('');\r\n\r\n    const [registered, setRegistered] = useState(false)\r\n    const [loggedIn, setLoggedIn] = useState(false)\r\n\r\n    const rContext = React.useContext(RootContext);\r\n\r\n    //Connects to server to register a new user\r\n    function submit(e: any) {\r\n        e.preventDefault();\r\n\r\n        Axios.post('http://localhost:4002/user/register', {\r\n            email: iEmail,\r\n            username: iUsername,\r\n            password: iPassword\r\n        })\r\n            .then(res => {\r\n                //success\r\n                setRegistered(true);\r\n\r\n            })\r\n            .catch(err => {\r\n                //issue\r\n            })\r\n    }\r\n\r\n    function loggedInView() {\r\n        return (\r\n            <Grid container spacing={0} alignItems=\"center\" justify=\"center\" direction=\"column\">\r\n                <Grid item xs={6}>\r\n                    <Paper>\r\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" style={{ padding: \"10px\", width: \"300px\" }}>\r\n                            You are already logged in!  You don't need to create an account!\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    function registeredView() {\r\n        return (\r\n            <Grid container spacing={0} alignItems=\"center\" justify=\"center\" direction=\"column\">\r\n                <Grid item xs={6}>\r\n                    <Paper>\r\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" style={{ padding: \"10px\", width: \"300px\" }}>\r\n                            Your account has been succesfully created!\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    function defaultView() {\r\n        return (\r\n            <Grid container spacing={0} alignItems=\"center\" justify=\"center\" direction=\"column\">\r\n                <Grid item xs={6}>\r\n                    <Paper>\r\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" style={{ padding: \"10px\", width: \"300px\" }}>\r\n                            <form noValidate autoComplete=\"off\">\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <h1 style={{textAlign: \"center\"}}>Signup</h1>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TextField id=\"standard-basic\" label=\"Email\" onChange={\r\n                                                (e) => {\r\n                                                    e.preventDefault();\r\n                                                    setIEmail(e.target.value);\r\n                                                }\r\n                                            }  />\r\n                                        <br /><br />\r\n                                        <TextField id=\"standard-basic\" label=\"Username\" onChange={\r\n                                                (e) => {\r\n                                                    e.preventDefault();\r\n                                                    setIUsername(e.target.value);\r\n                                                }\r\n                                            }  />\r\n                                        <br /><br />\r\n                                        <TextField id=\"standard-basic\" label=\"Password\" onChange={\r\n                                                (e) => {\r\n                                                    e.preventDefault();\r\n                                                    setIPassword(e.target.value);\r\n                                                }\r\n                                            }  />\r\n                                    </Grid>\r\n                                    <Grid item style={{textAlign: \"center\", padding: \"30px\"}}>\r\n                                        <Button variant=\"contained\" color=\"primary\" onClick={submit}>Submit</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </form>\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {rContext.authenticated ==='true' ? loggedInView() : registered ? registeredView() : defaultView()}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Signup;","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\UnprotectedTest.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\Navbar.tsx",["53","54","55"],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Wishlist.tsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":16,"column":1,"nodeType":"62","endLine":48,"endColumn":3},{"ruleId":"60","severity":1,"message":"61","line":6,"column":1,"nodeType":"62","endLine":19,"endColumn":3},{"ruleId":"63","severity":1,"message":"64","line":3,"column":17,"nodeType":"65","messageId":"66","endLine":3,"endColumn":26},{"ruleId":"63","severity":1,"message":"67","line":36,"column":14,"nodeType":"65","messageId":"66","endLine":36,"endColumn":20},{"ruleId":"63","severity":1,"message":"68","line":13,"column":12,"nodeType":"65","messageId":"66","endLine":13,"endColumn":20},{"ruleId":"63","severity":1,"message":"69","line":13,"column":22,"nodeType":"65","messageId":"66","endLine":13,"endColumn":33},{"ruleId":"63","severity":1,"message":"70","line":1,"column":18,"nodeType":"65","messageId":"66","endLine":1,"endColumn":22},{"ruleId":"63","severity":1,"message":"71","line":1,"column":24,"nodeType":"65","messageId":"66","endLine":1,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":57,"column":41,"nodeType":"74","messageId":"75","endLine":57,"endColumn":43},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'logout' is defined but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]