[{"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\index.tsx":"1","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\App.tsx":"2","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\contexts\\RootContext.tsx":"3","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\auth\\AuthenticatedRoute.tsx":"4","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Login.tsx":"5","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Signup.tsx":"6","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\Navbar.tsx":"7","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\Wishlist.tsx":"8","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionTableItem.tsx":"9","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionTable.tsx":"10","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionsList.tsx":"11","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionListItem.tsx":"12","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\Collection.tsx":"13","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\Collections.tsx":"14","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Home.tsx":"15","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\search\\Search.tsx":"16","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\search\\SearchList.tsx":"17","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionsAdd.tsx":"18","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\funko\\Funko.tsx":"19","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\funko\\FunkoAddToCollection.tsx":"20","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\EditCollectionModal.tsx":"21","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\funko\\FeaturedFunko.tsx":"22","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\Footer.tsx":"23","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\admin\\Admin.tsx":"24"},{"size":463,"mtime":1608752672011,"results":"25","hashOfConfig":"26"},{"size":1842,"mtime":1610487178646,"results":"27","hashOfConfig":"26"},{"size":2516,"mtime":1610506576440,"results":"28","hashOfConfig":"26"},{"size":576,"mtime":1610055711791,"results":"29","hashOfConfig":"26"},{"size":5516,"mtime":1610506697798,"results":"30","hashOfConfig":"26"},{"size":8103,"mtime":1610502954676,"results":"31","hashOfConfig":"26"},{"size":4868,"mtime":1610506667076,"results":"32","hashOfConfig":"26"},{"size":4982,"mtime":1610407579478,"results":"33","hashOfConfig":"26"},{"size":1321,"mtime":1610053152864,"results":"34","hashOfConfig":"26"},{"size":1606,"mtime":1610245316919,"results":"35","hashOfConfig":"26"},{"size":4069,"mtime":1610249355000,"results":"36","hashOfConfig":"26"},{"size":506,"mtime":1610053142499,"results":"37","hashOfConfig":"26"},{"size":6531,"mtime":1610412469985,"results":"38","hashOfConfig":"26"},{"size":2103,"mtime":1610238273977,"results":"39","hashOfConfig":"26"},{"size":558,"mtime":1610411270206,"results":"40","hashOfConfig":"26"},{"size":1349,"mtime":1610411831361,"results":"41","hashOfConfig":"26"},{"size":2416,"mtime":1610411018271,"results":"42","hashOfConfig":"26"},{"size":3112,"mtime":1610226519882,"results":"43","hashOfConfig":"26"},{"size":5218,"mtime":1610321660062,"results":"44","hashOfConfig":"26"},{"size":4592,"mtime":1610326292835,"results":"45","hashOfConfig":"26"},{"size":3631,"mtime":1610406548201,"results":"46","hashOfConfig":"26"},{"size":1500,"mtime":1610503943794,"results":"47","hashOfConfig":"26"},{"size":625,"mtime":1610486230696,"results":"48","hashOfConfig":"26"},{"size":10411,"mtime":1610498265926,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"2p6n5k",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\index.tsx",[],["109","110"],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\App.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\contexts\\RootContext.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\auth\\AuthenticatedRoute.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Login.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Signup.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\Navbar.tsx",["111","112","113","114"],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\Wishlist.tsx",["115","116"],"import { Grid, Card, CardContent, Typography, Button, Table, TableHead, TableRow, TableCell, TableBody, IconButton } from \"@material-ui/core\";\r\nimport { DeleteForever } from \"@material-ui/icons\";\r\nimport Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootContext } from \"../../contexts/RootContext\";\r\nimport CollectionTable from \"./CollectionTable\";\r\n\r\ntype WishlistProps = {\r\n    component: any\r\n}\r\n\r\ntype WishlistState = {\r\n    funkos: []\r\n    result: any,\r\n    styles: any\r\n}\r\n\r\nexport default class Wishlist extends Component<WishlistProps, WishlistState> {\r\n\r\n    static contextType = RootContext;\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            funkos: [],\r\n            result: null,\r\n            styles: {\r\n                root: {\r\n                    width: '100%'\r\n                }\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        Axios.get(`${this.context.serverUrl}/collection/wishlist`, {\r\n            headers: {\r\n                \"Authorization\": this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                console.log(res.data.wishlist);\r\n\r\n                this.setState({\r\n                    result: res.data.wishlist\r\n                })\r\n\r\n                this.getFunkoData(res.data.wishlist.funkos);\r\n            })\r\n    }\r\n\r\n    getFunkoData(funkoIds: Array<number>) {\r\n        if (funkoIds.length === 0) {\r\n            this.setState({\r\n                funkos: []\r\n            })\r\n        } else {\r\n\r\n        Axios.post(`${this.context.serverUrl}/funko/getall`, { funkoIds })\r\n            .then((res: any) => {\r\n                console.log(res.data.funkos)\r\n\r\n                this.setState({\r\n                    funkos: res.data.funkos\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteFunko(funkoId: number) {\r\n        //REMOVE from the array,\r\n        //Update the collection list to remove the funko\r\n\r\n        let funkos: Array<number> = this.state.funkos.map((f: any) => f.id)\r\n        funkos.splice(funkos.indexOf(funkoId), 1)\r\n        this.getFunkoData(funkos);\r\n\r\n        let axiosData = {\r\n            collectionId: this.state.result.id,\r\n            name: this.state.result.name,\r\n            description: this.state.result.description,\r\n            funkos: funkos\r\n        }\r\n\r\n        Axios.post(`${this.context.serverUrl}/collection/update`, axiosData, {\r\n            headers: {\r\n                \"Authorization\": this.context.token\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.result !== null && <Grid container justify=\"center\" spacing={3}>\r\n                    <Grid item xs={8}>\r\n                        <Card style={this.state.styles.root}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h2\">Wishlist</Typography>\r\n                                <hr />\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Funkos</TableCell>\r\n                                            <TableCell align=\"right\">Actions</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(this.state.funkos.length !== 0) ?\r\n                                            this.state.funkos.map((funko: any) => {\r\n                                                return (\r\n                                                    <TableRow key={funko.id}>\r\n                                                        <TableCell><Link to={`/funko/${funko.id}`}>{funko.title}</Link></TableCell>\r\n                                                        <TableCell align=\"right\">\r\n                                                            <IconButton onClick={() => {this.deleteFunko(funko.id)}}>\r\n                                                                <DeleteForever />\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }) : <Typography variant=\"subtitle1\">You have no funkos in your wishlist, consider adding one to begin.</Typography>\r\n                                        }\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionTableItem.tsx",[],["117","118"],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionTable.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionsList.tsx",["119"],"import classes from \"*.module.css\";\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button, Grid, Modal } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootContext } from '../../contexts/RootContext';\r\nimport CollectionsAdd from \"./CollectionsAdd\";\r\n\r\ntype CollectionsListProps = {\r\n    page: number,\r\n    maxResults: number\r\n}\r\n\r\ntype CollectionsListState = {\r\n    totalResults: number,\r\n    results: Array<any>,\r\n    addModalOpen: boolean\r\n}\r\n\r\nexport default class CollectionsList extends Component<CollectionsListProps, CollectionsListState> {\r\n    static contextType = RootContext;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            totalResults: 0,\r\n            results: [],\r\n            addModalOpen: false\r\n        }\r\n\r\n        this.handleAddModalOpen = this.handleAddModalOpen.bind(this);\r\n        this.handleAddModalClosed = this.handleAddModalClosed.bind(this);\r\n    }\r\n\r\n    loadData() {\r\n        let axiosData = {\r\n            page: this.props.page,\r\n            maxResults: this.props.maxResults\r\n        }\r\n\r\n        Axios.post(`${this.context.serverUrl}/collection/user`, axiosData, {\r\n            headers: {\r\n                'Authorization': this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.setState({\r\n                    totalResults: res.data.data.count,\r\n                    results: res.data.data.rows\r\n                })\r\n\r\n                console.log(res.data.data.rows)\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response)\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: any) {\r\n        if (prevProps.page !== this.props.page) {\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    handleAddModalOpen() {\r\n        this.setState({\r\n            addModalOpen: true\r\n        })\r\n    }\r\n\r\n    handleAddModalClosed() {\r\n        this.setState({\r\n            addModalOpen: false\r\n        })\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Grid container justify=\"flex-end\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleAddModalOpen}>Add</Button>\r\n                </Grid>\r\n                <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Collection Name</TableCell>\r\n                        <TableCell align=\"left\">Description</TableCell>\r\n                        <TableCell align=\"right\"># of Items</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {this.state.results.map((result: any) => (\r\n                        <TableRow key={result.id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            <Link to={`/collection/${result.id}`}>{result.name}</Link>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{result.description}</TableCell>\r\n                        <TableCell align=\"right\">{0}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n\r\n\r\n\r\n                <Modal\r\n                    open={this.state.addModalOpen}\r\n                    onClose={this.handleAddModalClosed}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    style={{display:'flex',alignItems:'center',justifyContent:'center', outline: 0}}\r\n                >\r\n                    <CollectionsAdd closeModal={this.handleAddModalClosed} />\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionListItem.tsx",[],["120","121"],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\Collection.tsx",["122"],"import { Button, Card, CardContent, Grid, IconButton, Modal, Paper, Table, TableBody, TableCell, TableHead, TableRow, Typography } from '@material-ui/core';\r\nimport { DeleteForever } from '@material-ui/icons';\r\nimport Axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { RootContext } from '../../contexts/RootContext';\r\nimport EditCollectionModal from './EditCollectionModal';\r\n\r\ntype CollectionProps = {\r\n    match: any,\r\n    history?: any\r\n}\r\n\r\ntype CollectionState = {\r\n    result: any,\r\n    collectionId: number,\r\n    styles: any,\r\n    funkos: Array<any>,\r\n    editCollectionModalOpen: boolean\r\n}\r\n\r\nexport default class Collection extends Component<CollectionProps, CollectionState> {\r\n    static contextType = RootContext;\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            collectionId: this.props.match.params.collectionId,\r\n            result: null,\r\n            funkos: [],\r\n            styles: {\r\n                root: {\r\n                    width: '100%'\r\n                }\r\n            },\r\n            editCollectionModalOpen: false\r\n        }\r\n\r\n        this.handleEditCollectionModalClosed = this.handleEditCollectionModalClosed.bind(this);\r\n        this.handleEditCollectionModalOpen = this.handleEditCollectionModalOpen.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        Axios.get(`${this.context.serverUrl}/collection/id/${this.state.collectionId}`)\r\n            .then(res => {\r\n                console.log(res.data.data);\r\n\r\n                this.setState({\r\n                    result: res.data.data\r\n                })\r\n\r\n                this.getFunkoData(res.data.data.funkos);\r\n            })\r\n    }\r\n\r\n    getFunkoData(funkoIds: Array<number>) {\r\n        if (funkoIds.length === 0) {\r\n            this.setState({\r\n                funkos: []\r\n            })\r\n        } else {\r\n\r\n        Axios.post(`${this.context.serverUrl}/funko/getall`, { funkoIds })\r\n            .then((res: any) => {\r\n                console.log(res.data.funkos)\r\n\r\n                this.setState({\r\n                    funkos: res.data.funkos\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteFunko(funkoId: number) {\r\n        //REMOVE from the array,\r\n        //Update the collection list to remove the funko\r\n\r\n        let funkos: Array<number> = this.state.funkos.map((f: any) => f.id)\r\n        funkos.splice(funkos.indexOf(funkoId), 1)\r\n        this.getFunkoData(funkos);\r\n\r\n        let axiosData = {\r\n            collectionId: this.state.collectionId,\r\n            name: this.state.result.name,\r\n            description: this.state.result.description,\r\n            funkos: funkos\r\n        }\r\n\r\n        Axios.post(`${this.context.serverUrl}/collection/update`, axiosData, {\r\n            headers: {\r\n                \"Authorization\": this.context.token\r\n            }\r\n        })\r\n    }\r\n\r\n    handleEditCollectionModalOpen() {\r\n        this.setState({\r\n            editCollectionModalOpen: true\r\n        })\r\n    }\r\n\r\n    handleEditCollectionModalClosed(success: boolean, redirect: boolean) {\r\n        this.setState({\r\n            editCollectionModalOpen: false\r\n        })\r\n\r\n        if (success) this.loadData()\r\n        if (redirect) this.props.history.push('/collections')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.result !== null && <Grid container justify=\"center\" spacing={3}>\r\n                    <Grid item xs={8}>\r\n                        <Card style={this.state.styles.root}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h2\">{this.state.result.name}</Typography>\r\n                                <hr />\r\n                                <Typography variant=\"subtitle1\">{this.state.result.description} - <Button onClick={this.handleEditCollectionModalOpen}>Edit</Button></Typography>\r\n                                <hr />\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Funkos</TableCell>\r\n                                            <TableCell align=\"right\">Actions</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(this.state.funkos.length !== 0) ?\r\n                                            this.state.funkos.map((funko: any) => {\r\n                                                return (\r\n                                                    <TableRow key={funko.id}>\r\n                                                        <TableCell><Link to={`/funko/${funko.id}`}>{funko.title}</Link></TableCell>\r\n                                                        <TableCell align=\"right\">\r\n                                                            <IconButton onClick={() => {this.deleteFunko(funko.id)}}>\r\n                                                                <DeleteForever />\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }) : <Typography variant=\"subtitle1\">You have no funkos in this collection, consider adding one to begin.</Typography>\r\n                                        }\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>}\r\n                \r\n                <Modal\r\n                    open={this.state.editCollectionModalOpen}\r\n                    onClose={() => this.handleEditCollectionModalClosed(false, false)}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    style={{display:'flex',alignItems:'center',justifyContent:'center', outline: 0}}\r\n                >\r\n                    <EditCollectionModal collection={this.state.result} closeModal={this.handleEditCollectionModalClosed} />\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\Collections.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\Home.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\search\\Search.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\search\\SearchList.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\CollectionsAdd.tsx",["123","124","125","126"],"import { Button, Grid, makeStyles, Paper, TextField, withStyles } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport { RootContext } from '../../contexts/RootContext';\r\n\r\ntype CollectionsAddProps = {\r\n    closeModal: Function\r\n}\r\ntype CollectionsAddState = {\r\n    styles: any,\r\n    iName: string,\r\n    iDesc: string,\r\n    errors: Array<string>\r\n}\r\n\r\nexport default class CollectionsAdd extends Component<CollectionsAddProps, CollectionsAddState> {\r\n    static contextType = RootContext\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            iName: '',\r\n            iDesc: '',\r\n            styles: {\r\n                textfield: {\r\n                    width: '300px'\r\n                },\r\n                errorMsg: {\r\n                    color: 'red'\r\n                }\r\n            },\r\n            errors: []\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    onInputChange(e: any, v: string) {\r\n        switch (v) {\r\n            case \"name\":\r\n                this.setState({\r\n                    iName: e.target.value\r\n                })\r\n                break;\r\n            case \"desc\":\r\n                this.setState({\r\n                    iDesc: e.target.value\r\n                })\r\n                break;\r\n        }\r\n    }\r\n\r\n    onSubmit(e: any) {\r\n        e.preventDefault();\r\n\r\n        let success = false;\r\n        let errors = [];\r\n        //Handle adding a new collection\r\n        if (this.state.iName === '') errors.push('The name must not be empty.')\r\n        if (this.state.iDesc === '') errors.push('The description must not be empty.')\r\n\r\n        if (errors.length === 0) {\r\n            let axiosData = {\r\n                name: this.state.iName,\r\n                description: this.state.iDesc\r\n            }\r\n\r\n            Axios.post(`${this.context.serverUrl}/collection/create`, axiosData, {\r\n                headers: {\r\n                    \"Authorization\": this.context.token\r\n                }\r\n            })\r\n\r\n            this.props.closeModal()\r\n        } else {\r\n            this.setState({\r\n                errors: errors\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Paper style={{\r\n                padding: 10\r\n            }}>\r\n                {this.state.errors.length !== 0 && <div>\r\n                        {this.state.errors.map(e => {\r\n                            return <p style={this.state.styles.errorMsg}>{e}</p>\r\n                        })}\r\n                    </div>}\r\n                <form noValidate autoComplete=\"off\" onSubmit={this.onSubmit}>\r\n                    <TextField type=\"text\" style={this.state.styles.textfield} onChange={(e) => this.onInputChange(e, \"name\")} label=\"Name\" />< br />\r\n                    <TextField type=\"text\" style={this.state.styles.textfield} onChange={(e) => this.onInputChange(e, \"desc\")} label=\"Description\" /><br /><br />\r\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">Add</Button>\r\n                </form>\r\n            </Paper>\r\n        )\r\n    }\r\n}",["127","128"],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\funko\\Funko.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\funko\\FunkoAddToCollection.tsx",["129","130"],"import { Button, FormControl, Grid, InputLabel, MenuItem, Paper, Select, Typography } from '@material-ui/core';\r\nimport { Collections } from '@material-ui/icons';\r\nimport Axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { RootContext } from '../../contexts/RootContext';\r\n\r\ntype FunkoAddToCollectionProps = {\r\n    closeModal: Function,\r\n    funkoId: number\r\n}\r\ntype FunkoAddToCollectionState = {\r\n    styles: any,\r\n    collections: Array<any>,\r\n    selectedCollection: number | unknown\r\n}\r\n\r\nexport default class FunkoAddToCollection extends Component<FunkoAddToCollectionProps, FunkoAddToCollectionState> {\r\n    static contextType = RootContext;\r\n\r\n    constructor(props: FunkoAddToCollectionProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            styles: {\r\n                root: {\r\n                    width: '600px'\r\n                }\r\n            },\r\n            collections: [],\r\n            selectedCollection: -1\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //find collections that exist for this user, add them to a list and provide a drop down to choose a collection to add the funko to.\r\n        let axiosData = {\r\n            ignoreLimits: true\r\n        }\r\n        Axios.post(`${this.context.serverUrl}/collection/user`, axiosData, {\r\n            headers: {\r\n                \"Authorization\": this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                res.data.data.rows.map((r: any) => {\r\n                    this.setState({\r\n                        collections: [...this.state.collections, {\r\n                            id: r.id,\r\n                            name: r.name,\r\n                            description: r.description,\r\n                            funkos: r.funkos\r\n                        }]\r\n                    })\r\n\r\n                    this.setState({\r\n                        selectedCollection: this.state.collections[0].id\r\n                    })\r\n                })\r\n            })//TODO: FINISH THE ADD TO A COLLECTION FUNKO\r\n    }\r\n\r\n    handleChange(e: React.ChangeEvent<{value: number | unknown}>) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            selectedCollection: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(e: React.MouseEvent) {\r\n        e.preventDefault();\r\n\r\n        let axiosData = {\r\n            collectionId: this.state.selectedCollection,\r\n            name: this.state.collections.find(e => e.id === this.state.selectedCollection).name,\r\n            description: this.state.collections.find(e => e.id === this.state.selectedCollection).description,\r\n            funkos: [...this.state.collections.find(e => e.id === this.state.selectedCollection).funkos, this.props.funkoId]\r\n        }\r\n\r\n        Axios.post(`${this.context.serverUrl}/collection/update`, axiosData, {\r\n            headers: {\r\n                \"Authorization\": this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.props.closeModal(true);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid component={Paper} style={this.state.styles.root} justify=\"center\" container>\r\n                { this.state.collections.length !== 0 && <Grid item xs={12}>\r\n                    <form>\r\n                        <FormControl>\r\n                            <InputLabel id=\"demo-simple-select-label\">Collections</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={this.state.collections[0].id}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                {this.state.collections.map((c) => {\r\n                                    return <MenuItem value={c.id}>{c.name}</MenuItem>\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <br />\r\n                        <Button onClick={this.handleSubmit}>Add</Button>\r\n                    </form>\r\n                </Grid>}\r\n\r\n                {this.state.collections.length === 0 && <Typography variant=\"subtitle1\">You do not have a collection, please head over to the <Link to=\"/collections\">collections</Link> page to get started.</Typography>}\r\n            </Grid>\r\n        )\r\n    }\r\n}","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\collections\\EditCollectionModal.tsx",[],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\pages\\funko\\FeaturedFunko.tsx",["131"],"C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\Footer.tsx",["132"],"import { Grid, Typography } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                marginTop: 'auto',\r\n            }}>\r\n                <Grid container justify=\"space-around\">\r\n                    <img style={{width: '200px'}} src=\"/logo.png\" />\r\n                </Grid>\r\n                <Grid container justify=\"space-around\">\r\n                    <Typography variant=\"caption\">&copy; 2021 Joshua Mason</Typography>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Josh Mason\\Desktop\\WDOctober2020\\RedBadgeFunko\\client\\src\\components\\admin\\Admin.tsx",["133","134","135"],"import { Button, Card, CardContent, CardHeader, Collapse, Grid, IconButton, Paper, Table, TableBody, TableCell, TableHead, TableRow, TextField } from '@material-ui/core';\r\nimport { DeleteForever, ExpandMore, SupervisorAccount, Visibility } from '@material-ui/icons';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport Axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { StringLiteral } from 'typescript';\r\nimport { RootContext } from '../contexts/RootContext';\r\n\r\ntype AdminProps = {}\r\ntype AdminState = {\r\n    iUsername: string,\r\n    userExpanded: boolean,\r\n    userPage: number,\r\n    users: Array<any>,\r\n    maxUserPage: number,\r\n    userData: any\r\n}\r\n\r\nexport default class Admin extends Component<AdminProps, AdminState> {\r\n    static contextType = RootContext;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            iUsername: '',\r\n            userExpanded: false,\r\n            userPage: 1,\r\n            users: [],\r\n            maxUserPage: 0,\r\n            userData: null\r\n        }\r\n\r\n        this.handleExpand = this.handleExpand.bind(this);\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n        this.showUser = this.showUser.bind(this);\r\n        this.adminUpdate = this.adminUpdate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadUserPage()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: any, prevState: any) {\r\n        if (prevState.userPage !== this.state.userPage) {\r\n            this.loadUserPage();\r\n        }\r\n    }\r\n\r\n    loadUserPage() {\r\n        let axiosData = {\r\n            page: this.state.userPage\r\n        }\r\n\r\n        Axios.post(`${this.context.serverUrl}/user/all`, axiosData, {\r\n            headers: {\r\n                \"Authorization\": this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.setState({\r\n                    users: res.data.rows,\r\n                    maxUserPage: Math.ceil(res.data.count / 10)\r\n                })\r\n\r\n                console.log(res.data)\r\n            })\r\n    }\r\n\r\n    deleteUser(id: number) {\r\n        Axios.get(`${this.context.serverUrl}/user/delete/${id}`, {\r\n            headers: {\r\n                \"Authorization\": this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.loadUserPage();\r\n            })\r\n    }\r\n\r\n    showUser(id: number) {\r\n        Axios.get(`${this.context.serverUrl}/user/id/${id}`, {\r\n            headers: {\r\n                \"Authorization\": this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.setState({\r\n                    userData: res.data\r\n                })\r\n            })\r\n    }\r\n\r\n    deleteCollection(id: number) {\r\n        Axios.get(`${this.context.serverUrl}/collection/delete/${id}`, {\r\n            headers: {\r\n                \"Authorization\": this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.showUser(this.state.userData.user.id);\r\n            })\r\n    }\r\n\r\n    adminUpdate() {\r\n        let user = this.state.userData.user;\r\n\r\n        user.isAdmin = !user.isAdmin\r\n\r\n        Axios.post(`${this.context.serverUrl}/user/update`, user, {\r\n            headers: {\r\n                \"Authorization\": this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.showUser(user.id);\r\n                this.loadUserPage()\r\n            })\r\n    }\r\n\r\n    handleExpand() {\r\n        this.setState({\r\n            userExpanded: !this.state.userExpanded\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (!this.context.isAdmin) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Grid container justify=\"space-around\">\r\n                    <Grid item xs={8} component={Paper} style={{ padding: '30px' }}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Card>\r\n                                    <CardHeader title=\"Users\" action={\r\n                                        <IconButton>\r\n                                            <ExpandMore style={\r\n                                                this.state.userExpanded ? { transform: 'rotate(180deg)' } : {}\r\n                                            } onClick={this.handleExpand} />\r\n                                        </IconButton>\r\n                                    } />\r\n                                    <Collapse in={this.state.userExpanded}>\r\n                                        <CardContent>\r\n                                            <Table>\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell>Name</TableCell>\r\n                                                        <TableCell align=\"right\">Actions</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {this.state.users.map((u) => {\r\n                                                        return (\r\n                                                            <TableRow>\r\n                                                                <TableCell>{u.username} {u.isAdmin ? '(ADMIN)': ''}</TableCell>\r\n                                                                <TableCell align=\"right\">\r\n                                                                    <IconButton onClick={() => this.showUser(u.id)}>\r\n                                                                        <Visibility />\r\n                                                                    </IconButton>\r\n                                                                    <IconButton onClick={() => this.deleteUser(u.id)}>\r\n                                                                        <DeleteForever />\r\n                                                                    </IconButton>\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                        );\r\n                                                    })}\r\n                                                </TableBody>\r\n                                            </Table>\r\n\r\n                                            <Grid container justify=\"space-around\">\r\n                                                <Pagination count={\r\n                                                    Math.ceil(this.state.maxUserPage)\r\n                                                } defaultPage={1} siblingCount={1} boundaryCount={1} page={this.state.userPage} onChange={(e, v) => {\r\n                                                    this.setState({\r\n                                                        userPage: v\r\n                                                    })\r\n                                                }} />\r\n                                            </Grid>\r\n                                        </CardContent>\r\n                                    </Collapse>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {this.state.userData !== null &&\r\n                                    <Card>\r\n                                        <CardHeader title={this.state.userData.user.username}\r\n                                            subheader={this.state.userData.user.email}\r\n                                            action={\r\n                                                <IconButton onClick={this.adminUpdate}>\r\n                                                    <SupervisorAccount color={this.state.userData.user.isAdmin ? 'secondary':'primary'}/>\r\n                                                </IconButton>\r\n                                            } />\r\n                                        <CardContent>\r\n                                            <Table>\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell>Collection Name</TableCell>\r\n                                                        <TableCell align=\"right\">Actions</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {this.state.userData.collections.map((c: any) => {\r\n                                                        return (<TableRow>\r\n                                                            <TableCell>\r\n                                                                <Link to={`/collection/${c.id}`}>{c.name}</Link>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <IconButton onClick={() => {\r\n                                                                    this.deleteCollection(c.id);\r\n                                                                }}>\r\n                                                                    <DeleteForever />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>);\r\n                                                    })}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":1,"column":47,"nodeType":"142","messageId":"143","endLine":1,"endColumn":57},{"ruleId":"140","severity":1,"message":"144","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":16},{"ruleId":"140","severity":1,"message":"145","line":7,"column":8,"nodeType":"142","messageId":"143","endLine":7,"endColumn":13},{"ruleId":"146","severity":1,"message":"147","line":84,"column":38,"nodeType":"148","endLine":84,"endColumn":85},{"ruleId":"140","severity":1,"message":"149","line":1,"column":47,"nodeType":"142","messageId":"143","endLine":1,"endColumn":53},{"ruleId":"140","severity":1,"message":"150","line":7,"column":8,"nodeType":"142","messageId":"143","endLine":7,"endColumn":23},{"ruleId":"136","replacedBy":"151"},{"ruleId":"138","replacedBy":"152"},{"ruleId":"140","severity":1,"message":"153","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":15},{"ruleId":"136","replacedBy":"154"},{"ruleId":"138","replacedBy":"155"},{"ruleId":"140","severity":1,"message":"156","line":1,"column":62,"nodeType":"142","messageId":"143","endLine":1,"endColumn":67},{"ruleId":"140","severity":1,"message":"157","line":1,"column":18,"nodeType":"142","messageId":"143","endLine":1,"endColumn":22},{"ruleId":"140","severity":1,"message":"158","line":1,"column":24,"nodeType":"142","messageId":"143","endLine":1,"endColumn":34},{"ruleId":"140","severity":1,"message":"159","line":1,"column":54,"nodeType":"142","messageId":"143","endLine":1,"endColumn":64},{"ruleId":"140","severity":1,"message":"160","line":56,"column":13,"nodeType":"142","messageId":"143","endLine":56,"endColumn":20},{"ruleId":"136","replacedBy":"161"},{"ruleId":"138","replacedBy":"162"},{"ruleId":"140","severity":1,"message":"163","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":21},{"ruleId":"164","severity":1,"message":"165","line":49,"column":49,"nodeType":"166","messageId":"167","endLine":49,"endColumn":51},{"ruleId":"140","severity":1,"message":"156","line":1,"column":16,"nodeType":"142","messageId":"143","endLine":1,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":11,"column":21,"nodeType":"148","endLine":11,"endColumn":69},{"ruleId":"140","severity":1,"message":"149","line":1,"column":10,"nodeType":"142","messageId":"143","endLine":1,"endColumn":16},{"ruleId":"140","severity":1,"message":"168","line":1,"column":134,"nodeType":"142","messageId":"143","endLine":1,"endColumn":143},{"ruleId":"140","severity":1,"message":"169","line":7,"column":10,"nodeType":"142","messageId":"143","endLine":7,"endColumn":23},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'MenuIcon' is defined but never used.","'Admin' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'CollectionTable' is defined but never used.",["170"],["171"],"'classes' is defined but never used.",["170"],["171"],"'Paper' is defined but never used.","'Grid' is defined but never used.","'makeStyles' is defined but never used.","'withStyles' is defined but never used.","'success' is assigned a value but never used.",["170"],["171"],"'Collections' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'TextField' is defined but never used.","'StringLiteral' is defined but never used.","no-global-assign","no-unsafe-negation"]